{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/cameraFeed/CameraFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { predictLetter } from \"../../services/api\";\nimport styles from \"./CameraFeed.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraFeed({\n  predictedLetters = [],\n  setPredictedLetters = () => {},\n  translatedSentence = [],\n  setTranslatedSentence = () => {}\n}) {\n  _s();\n  const webcamRef = useRef(null);\n  const [isPredicting, setIsPredicting] = useState(true);\n  const [currentLetter, setCurrentLetter] = useState(\"\");\n  useEffect(() => {\n    let intervalId;\n    if (isPredicting) {\n      intervalId = setInterval(async () => {\n        await captureImageAndPredict();\n      }, 1500); // Polls every 1.5 seconds\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [isPredicting]);\n  const captureImageAndPredict = useCallback(async () => {\n    if (!webcamRef.current) return;\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (!imageSrc) return;\n    try {\n      const letter = await predictLetter(imageSrc);\n      if (letter && letter.length === 1 && letter.match(/[A-Z]/)) {\n        setCurrentLetter(letter);\n        setPredictedLetters(prev => [...prev, letter]);\n      } else if (letter === \"Stabilizing...\") {\n        setCurrentLetter(letter);\n      } else {\n        setCurrentLetter(letter);\n      }\n    } catch (error) {\n      console.error(\"Prediction error:\", error);\n    }\n  }, [setPredictedLetters]);\n  const handleDeleteLastLetter = () => {\n    setPredictedLetters(prev => prev.slice(0, -1));\n  };\n  const handleAddWord = () => {\n    if (predictedLetters.length === 0) return;\n    const newWord = predictedLetters.join(\"\");\n    setTranslatedSentence(prev => [...prev, newWord]);\n    setPredictedLetters([]);\n  };\n  const togglePredicting = () => {\n    setIsPredicting(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.webcamWrapper,\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        className: styles.webcam,\n        videoConstraints: {\n          facingMode: \"user\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dashedOverlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottomBar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.predictedLettersBox,\n        children: predictedLetters.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.placeholderText,\n          children: \"Letters will appear here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.predictedLetters,\n          children: predictedLetters.join(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.deleteButton,\n          onClick: handleDeleteLastLetter,\n          disabled: predictedLetters.length === 0,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.addWordButton,\n          onClick: handleAddWord,\n          disabled: predictedLetters.length === 0,\n          children: \"Add Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.addWordButton,\n          onClick: togglePredicting,\n          children: [isPredicting ? \"Stop\" : \"Start\", \" Predicting\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Detected: \", currentLetter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraFeed, \"l92EPFb5PZsqO38vavMSdkLJ8J0=\");\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Webcam","predictLetter","styles","jsxDEV","_jsxDEV","CameraFeed","predictedLetters","setPredictedLetters","translatedSentence","setTranslatedSentence","_s","webcamRef","isPredicting","setIsPredicting","currentLetter","setCurrentLetter","intervalId","setInterval","captureImageAndPredict","clearInterval","current","imageSrc","getScreenshot","letter","length","match","prev","error","console","handleDeleteLastLetter","slice","handleAddWord","newWord","join","togglePredicting","className","container","children","webcamWrapper","audio","ref","screenshotFormat","webcam","videoConstraints","facingMode","fileName","_jsxFileName","lineNumber","columnNumber","dashedOverlay","bottomBar","predictedLettersBox","placeholderText","buttonGroup","deleteButton","onClick","disabled","addWordButton","_c","$RefreshReg$"],"sources":["/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/cameraFeed/CameraFeed.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { predictLetter } from \"../../services/api\";\nimport styles from \"./CameraFeed.module.css\";\n\nfunction CameraFeed({\n  predictedLetters = [],\n  setPredictedLetters = () => {},\n  translatedSentence = [],\n  setTranslatedSentence = () => {},\n}) {\n  const webcamRef = useRef(null);\n  const [isPredicting, setIsPredicting] = useState(true);\n  const [currentLetter, setCurrentLetter] = useState(\"\");\n\n  useEffect(() => {\n    let intervalId;\n    if (isPredicting) {\n      intervalId = setInterval(async () => {\n        await captureImageAndPredict();\n      }, 1500); // Polls every 1.5 seconds\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [isPredicting]);\n\n  const captureImageAndPredict = useCallback(async () => {\n    if (!webcamRef.current) return;\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (!imageSrc) return;\n\n    try {\n      const letter = await predictLetter(imageSrc);\n      if (letter && letter.length === 1 && letter.match(/[A-Z]/)) {\n        setCurrentLetter(letter);\n        setPredictedLetters((prev) => [...prev, letter]);\n      } else if (letter === \"Stabilizing...\") {\n        setCurrentLetter(letter);\n      } else {\n        setCurrentLetter(letter);\n      }\n    } catch (error) {\n      console.error(\"Prediction error:\", error);\n    }\n  }, [setPredictedLetters]);\n\n  const handleDeleteLastLetter = () => {\n    setPredictedLetters((prev) => prev.slice(0, -1));\n  };\n\n  const handleAddWord = () => {\n    if (predictedLetters.length === 0) return;\n    const newWord = predictedLetters.join(\"\");\n    setTranslatedSentence((prev) => [...prev, newWord]);\n    setPredictedLetters([]);\n  };\n\n  const togglePredicting = () => {\n    setIsPredicting((prev) => !prev);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.webcamWrapper}>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          className={styles.webcam}\n          videoConstraints={{\n            facingMode: \"user\",\n          }}\n        />\n\n        <div className={styles.dashedOverlay}></div>\n      </div>\n\n      <div className={styles.bottomBar}>\n        <div className={styles.predictedLettersBox}>\n          {predictedLetters.length === 0 ? (\n            <span className={styles.placeholderText}>\n              Letters will appear here...\n            </span>\n          ) : (\n            <span className={styles.predictedLetters}>\n              {predictedLetters.join(\"\")}\n            </span>\n          )}\n        </div>\n        <div className={styles.buttonGroup}>\n          <button\n            className={styles.deleteButton}\n            onClick={handleDeleteLastLetter}\n            disabled={predictedLetters.length === 0}\n          >\n            Delete\n          </button>\n          <button\n            className={styles.addWordButton}\n            onClick={handleAddWord}\n            disabled={predictedLetters.length === 0}\n          >\n            Add Word\n          </button>\n          <button className={styles.addWordButton} onClick={togglePredicting}>\n            {isPredicting ? \"Stop\" : \"Start\"} Predicting\n          </button>\n        </div>\n      </div>\n\n      {<p>Detected: {currentLetter}</p>}\n    </div>\n  );\n}\n\nexport default CameraFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}