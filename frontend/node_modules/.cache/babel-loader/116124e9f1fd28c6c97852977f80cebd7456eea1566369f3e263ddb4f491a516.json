{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/signDisplay/SignDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./SignDisplay.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignDisplay({\n  signs\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    if (!signs || signs.legnth === 0) return; /*If no signs or out of range, do nothing.*/\n    if (currentIndex >= signs.length) return;\n    let duration = 2.0;\n    if (currentSign.type === \"video\") {\n      duration = currentSign.duration || 3.0;\n    } else if (currentSign.type === \"image\") {\n      duration = currentSign.duration || 2.0;\n    }\n    const timer = setTimeout(() => {\n      setCurrentIndex(prev => prev + 1);\n    }, duration * 1000);\n    return () => clearTimeout(timer);\n  }, [signs, currentIndex]);\n  if (!signs || signs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signDisplay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.placeholder,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your translated signs will appear here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Example: Try typing \\\"hello world\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  const currentSign = signs[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.signDisplay,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.singleSignContainer,\n      children: [currentSign.type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/signs/${currentSign.value}`,\n        alt: currentSign.signLabel,\n        className: styles.signMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), currentSign.type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: `/signs/${currentSign.value}`,\n        className: styles.signMedia,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signLabel,\n      children: currentSign.signLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(SignDisplay, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = SignDisplay;\nexport default SignDisplay;\nvar _c;\n$RefreshReg$(_c, \"SignDisplay\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","SignDisplay","signs","_s","currentIndex","setCurrentIndex","legnth","length","duration","currentSign","type","timer","setTimeout","prev","clearTimeout","className","signDisplay","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","singleSignContainer","src","value","alt","signLabel","signMedia","autoPlay","muted","_c","$RefreshReg$"],"sources":["/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/signDisplay/SignDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./SignDisplay.module.css\";\n\nfunction SignDisplay({ signs }) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (!signs || signs.legnth === 0)\n      return; /*If no signs or out of range, do nothing.*/\n    if (currentIndex >= signs.length) return;\n\n    let duration = 2.0;\n    if (currentSign.type === \"video\") {\n      duration = currentSign.duration || 3.0;\n    } else if (currentSign.type === \"image\") {\n      duration = currentSign.duration || 2.0;\n    }\n\n    const timer = setTimeout(() => {\n      setCurrentIndex((prev) => prev + 1);\n    }, duration * 1000);\n\n    return () => clearTimeout(timer);\n  }, [signs, currentIndex]);\n\n  if (!signs || signs.length === 0) {\n    return (\n      <div className={styles.signDisplay}>\n        <div className={styles.placeholder}>\n          <p>Your translated signs will appear here.</p>\n          <small>Example: Try typing \"hello world\"</small>\n        </div>\n      </div>\n    );\n  }\n\n  const currentSign = signs[currentIndex];\n\n  return (\n    <div className={styles.signDisplay}>\n      <div className={styles.singleSignContainer}>\n        {currentSign.type === \"image\" && (\n          <img\n            src={`/signs/${currentSign.value}`}\n            alt={currentSign.signLabel}\n            className={styles.signMedia}\n          />\n        )}\n        {currentSign.type === \"video\" && (\n          <video\n            src={`/signs/${currentSign.value}`}\n            className={styles.signMedia}\n            autoPlay\n            muted\n          />\n        )}\n      </div>\n      <div className={styles.signLabel}>{currentSign.signLabel}</div>\n    </div>\n  );\n}\n\nexport default SignDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}