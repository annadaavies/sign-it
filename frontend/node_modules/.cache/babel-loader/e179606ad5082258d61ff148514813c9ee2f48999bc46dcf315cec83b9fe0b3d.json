{"ast":null,"code":"import axios from \"axios\";\n\n/**\n * Helper function to convert a serialised \"Dictionary\" entry\n * into an object with { type, label, value, ... } keys.\n */\nfunction parseDictionaryEntry(entryArray) {\n  // entryArray is something like:\n  // [\n  //   { key: 'type', value: 'video' },\n  //   { key: 'label', value: 'HELLO' },\n  //   { key: 'value', value: 'signs/hello.mp4' },\n  //   ...\n  // ]\n  const parsedObject = {};\n  entryArray.forEach(item => {\n    parsedObject[item.key] = item.value;\n  });\n  return parsedObject;\n}\nconst API_BASE = \"http://localhost:5000/api\";\nexport const predictLetter = async imageData => {\n  try {\n    const blob = await fetch(imageData).then(res => res.blob());\n    const formData = new FormData();\n    formData.append(\"image\", blob, \"frame.jpg\");\n    const response = await axios.post(`${API_BASE}/predict`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data.letter;\n  } catch (error) {\n    console.error(\"Prediction API error\", error);\n    return null;\n  }\n};\nexport const translateText = async text => {\n  try {\n    const response = await axios.post(`${API_BASE}/translate`, {\n      text\n    });\n    return response.data.signs.flatMap(item => item.value.map ? item.value : [item.value]);\n  } catch (error) {\n    console.error(\"Translation API error:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","parseDictionaryEntry","entryArray","parsedObject","forEach","item","key","value","API_BASE","predictLetter","imageData","blob","fetch","then","res","formData","FormData","append","response","post","headers","data","letter","error","console","translateText","text","signs","flatMap","map"],"sources":["/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n/**\n * Helper function to convert a serialised \"Dictionary\" entry\n * into an object with { type, label, value, ... } keys.\n */\nfunction parseDictionaryEntry(entryArray) {\n  // entryArray is something like:\n  // [\n  //   { key: 'type', value: 'video' },\n  //   { key: 'label', value: 'HELLO' },\n  //   { key: 'value', value: 'signs/hello.mp4' },\n  //   ...\n  // ]\n  const parsedObject = {};\n  entryArray.forEach((item) => {\n    parsedObject[item.key] = item.value;\n  });\n  return parsedObject;\n}\n\nconst API_BASE = \"http://localhost:5000/api\";\n\nexport const predictLetter = async (imageData) => {\n  try {\n    const blob = await fetch(imageData).then((res) => res.blob());\n\n    const formData = new FormData();\n    formData.append(\"image\", blob, \"frame.jpg\");\n\n    const response = await axios.post(`${API_BASE}/predict`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n\n    return response.data.letter;\n  } catch (error) {\n    console.error(\"Prediction API error\", error);\n    return null;\n  }\n};\n\nexport const translateText = async (text) => {\n  try {\n    const response = await axios.post(`${API_BASE}/translate`, { text });\n\n    return response.data.signs.flatMap((item) =>\n      item.value.map ? item.value : [item.value]\n    );\n  } catch (error) {\n    console.error(\"Translation API error:\", error);\n    return [];\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,UAAU,EAAE;EACxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvBD,UAAU,CAACE,OAAO,CAAEC,IAAI,IAAK;IAC3BF,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,GAAGD,IAAI,CAACE,KAAK;EACrC,CAAC,CAAC;EACF,OAAOJ,YAAY;AACrB;AAEA,MAAMK,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,SAAS,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;IAE7D,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,IAAI,EAAE,WAAW,CAAC;IAE3C,MAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,GAAGX,QAAQ,UAAU,EAAEO,QAAQ,EAAE;MACjEK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOF,QAAQ,CAACG,IAAI,CAACC,MAAM;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,IAAI,IAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,GAAGX,QAAQ,YAAY,EAAE;MAAEkB;IAAK,CAAC,CAAC;IAEpE,OAAOR,QAAQ,CAACG,IAAI,CAACM,KAAK,CAACC,OAAO,CAAEvB,IAAI,IACtCA,IAAI,CAACE,KAAK,CAACsB,GAAG,GAAGxB,IAAI,CAACE,KAAK,GAAG,CAACF,IAAI,CAACE,KAAK,CAC3C,CAAC;EACH,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}