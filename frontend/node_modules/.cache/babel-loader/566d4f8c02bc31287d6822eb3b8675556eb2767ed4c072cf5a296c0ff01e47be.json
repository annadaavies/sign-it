{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:5000/api\";\nfunction parseDictionaryEntry(entryArray) {\n  const parsedObject = {};\n  entryArray.forEach(item => {\n    parsedObject[item.key] = item.value;\n  });\n  return parsedObject;\n}\nexport const translateText = async text => {\n  try {\n    const response = await axios.post(`${API_BASE}/translateText`, {\n      text\n    });\n    const parsedSigns = response.data.signs.map(item => {\n      return parseDictionaryEntry(item.value);\n    });\n    return parsedSigns; // e.g. [{type: \"video\", label: \"HELLO\", value: \"signs/hello.mp4\"}, ...]\n  } catch (error) {\n    console.error(\"Translation API error:\", error);\n    return [];\n  }\n};\nexport const predictLetter = async base64Image => {\n  try {\n    const response = await axios.post(`${API_BASE}/predictLetter`, {\n      image: base64Image\n    });\n    return response.data.letter;\n  } catch (error) {\n    console.error(\"Prediction API error:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_BASE","parseDictionaryEntry","entryArray","parsedObject","forEach","item","key","value","translateText","text","response","post","parsedSigns","data","signs","map","error","console","predictLetter","base64Image","image","letter"],"sources":["/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"http://localhost:5000/api\";\n\nfunction parseDictionaryEntry(entryArray) {\n  const parsedObject = {};\n  entryArray.forEach((item) => {\n    parsedObject[item.key] = item.value;\n  });\n  return parsedObject;\n}\n\nexport const translateText = async (text) => {\n  try {\n    const response = await axios.post(`${API_BASE}/translateText`, { text });\n    const parsedSigns = response.data.signs.map((item) => {\n      return parseDictionaryEntry(item.value);\n    });\n\n    return parsedSigns; // e.g. [{type: \"video\", label: \"HELLO\", value: \"signs/hello.mp4\"}, ...]\n  } catch (error) {\n    console.error(\"Translation API error:\", error);\n    return [];\n  }\n};\n\nexport const predictLetter = async (base64Image) => {\n  try {\n    const response = await axios.post(`${API_BASE}/predictLetter`, {\n      image: base64Image,\n    });\n    return response.data.letter;\n  } catch (error) {\n    console.error(\"Prediction API error:\", error);\n    return [];\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,SAASC,oBAAoBA,CAACC,UAAU,EAAE;EACxC,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvBD,UAAU,CAACE,OAAO,CAAEC,IAAI,IAAK;IAC3BF,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,GAAGD,IAAI,CAACE,KAAK;EACrC,CAAC,CAAC;EACF,OAAOJ,YAAY;AACrB;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAOC,IAAI,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,gBAAgB,EAAE;MAAES;IAAK,CAAC,CAAC;IACxE,MAAMG,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,GAAG,CAAEV,IAAI,IAAK;MACpD,OAAOJ,oBAAoB,CAACI,IAAI,CAACE,KAAK,CAAC;IACzC,CAAC,CAAC;IAEF,OAAOK,WAAW,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,gBAAgB,EAAE;MAC7DoB,KAAK,EAAED;IACT,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACG,IAAI,CAACQ,MAAM;EAC7B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}