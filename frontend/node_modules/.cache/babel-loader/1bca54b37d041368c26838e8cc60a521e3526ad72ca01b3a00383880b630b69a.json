{"ast":null,"code":"var _jsxFileName = \"/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/cameraFeed/CameraFeed.jsx\",\n  _s = $RefreshSig$();\nimport Webcam from \"react-webcam\";\nimport { useRef, useEffect, useCallback } from \"react\";\nimport { predictLetter } from \"../../services/api\";\nimport styles from \"./CameraFeed.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraFeed = ({\n  onPrediction\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const intervalRef = useRef();\n  const capture = useCallback(async () => {\n    var _webcamRef$current;\n    //useCallback needed here in order to make capture a stable function so that it can be included in the dependency array.\n    if (!webcameRef.current) return;\n    const imageSrc = (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.getScreenshot();\n    if (imageSrc) {\n      try {\n        const letter = await predictLetter(imageSrc);\n        onPrediction(letter);\n      } catch (error) {\n        console.error(\"Prediction error:\", error);\n      }\n    }\n  }, [onPrediction]);\n  useEffect(() => {\n    intervalRef.current = setInterval(capture, 2000);\n    {\n      /* Capture every two seconds */\n    }\n    return () => clearInterval(intervalRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cameraContainer,\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      className: styles.camera,\n      videoConstraints: {\n        facingMode: \"user\",\n        width: 1280,\n        height: 720\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraFeed, \"/cxG6Fq/sRhEKYtt8yWRJbrtonM=\");\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["Webcam","useRef","useEffect","useCallback","predictLetter","styles","jsxDEV","_jsxDEV","CameraFeed","onPrediction","_s","webcamRef","intervalRef","capture","_webcamRef$current","webcameRef","current","imageSrc","getScreenshot","letter","error","console","setInterval","clearInterval","className","cameraContainer","children","audio","ref","screenshotFormat","camera","videoConstraints","facingMode","width","height","fileName","_jsxFileName","lineNumber","columnNumber","overlay","_c","$RefreshReg$"],"sources":["/Users/anna/Desktop/school/A LEVEL - ANNA/COMPUTER SCIENCE/NEA/frontend/src/components/cameraFeed/CameraFeed.jsx"],"sourcesContent":["import Webcam from \"react-webcam\";\nimport { useRef, useEffect, useCallback } from \"react\";\nimport { predictLetter } from \"../../services/api\";\nimport styles from \"./CameraFeed.module.css\";\n\nconst CameraFeed = ({ onPrediction }) => {\n  const webcamRef = useRef(null);\n  const intervalRef = useRef();\n\n  const capture = useCallback(async () => {\n    //useCallback needed here in order to make capture a stable function so that it can be included in the dependency array.\n    if (!webcameRef.current) return;\n    const imageSrc = webcamRef.current?.getScreenshot();\n    if (imageSrc) {\n      try {\n        const letter = await predictLetter(imageSrc);\n        onPrediction(letter);\n      } catch (error) {\n        console.error(\"Prediction error:\", error);\n      }\n    }\n  }, [onPrediction]);\n\n  useEffect(() => {\n    intervalRef.current = setInterval(capture, 2000);\n    {\n      /* Capture every two seconds */\n    }\n\n    return () => clearInterval(intervalRef.current);\n  }, []);\n\n  return (\n    <div className={styles.cameraContainer}>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        className={styles.camera}\n        videoConstraints={{\n          facingMode: \"user\",\n          width: 1280,\n          height: 720,\n        }}\n      />\n      <div className={styles.overlay}></div>\n    </div>\n  );\n};\n\nexport default CameraFeed;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,SAASC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACtD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMW,WAAW,GAAGX,MAAM,CAAC,CAAC;EAE5B,MAAMY,OAAO,GAAGV,WAAW,CAAC,YAAY;IAAA,IAAAW,kBAAA;IACtC;IACA,IAAI,CAACC,UAAU,CAACC,OAAO,EAAE;IACzB,MAAMC,QAAQ,IAAAH,kBAAA,GAAGH,SAAS,CAACK,OAAO,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBI,aAAa,CAAC,CAAC;IACnD,IAAID,QAAQ,EAAE;MACZ,IAAI;QACF,MAAME,MAAM,GAAG,MAAMf,aAAa,CAACa,QAAQ,CAAC;QAC5CR,YAAY,CAACU,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElBP,SAAS,CAAC,MAAM;IACdU,WAAW,CAACI,OAAO,GAAGM,WAAW,CAACT,OAAO,EAAE,IAAI,CAAC;IAChD;MACE;IAAA;IAGF,OAAO,MAAMU,aAAa,CAACX,WAAW,CAACI,OAAO,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKiB,SAAS,EAAEnB,MAAM,CAACoB,eAAgB;IAAAC,QAAA,gBACrCnB,OAAA,CAACP,MAAM;MACL2B,KAAK,EAAE,KAAM;MACbC,GAAG,EAAEjB,SAAU;MACfkB,gBAAgB,EAAC,YAAY;MAC7BL,SAAS,EAAEnB,MAAM,CAACyB,MAAO;MACzBC,gBAAgB,EAAE;QAChBC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE;MACV;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF/B,OAAA;MAAKiB,SAAS,EAAEnB,MAAM,CAACkC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}